{"version":3,"file":"static/js/642.8fda02ce.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","Pages/MoviesPage.jsx","webpack://react-homework-template/./src/components/ListFilms/ListFilms.module.css?6539","components/ListFilms/ListFilms.jsx","components/services/imageApi.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"SearchForm_Searchbar__TfPCD\",\"SearchForm\":\"SearchForm_SearchForm__jbIQn\",\"SearchFormBtn\":\"SearchForm_SearchFormBtn__F3BXT\",\"SearchForm-button-label\":\"SearchForm_SearchForm-button-label__xPh3F\",\"SearchFormInput\":\"SearchForm_SearchFormInput__jntvc\"};","import { useState, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport s from './SearchForm.module.css';\n\nexport const SearchForm = () => {\n  const [searchParams, setSearch] = useSearchParams();\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  // const { name, maxPrice, inStock } = params;\n\n  // const [search, setSearch] = useSearchParams();\n\n  // const queryParams = useMemo(() => {\n  //   return [...search].reduce((acc, [key, value]) => {\n  //     acc[key] = value;\n  //     console.log(acc);\n  //     console.log(key);\n  //     console.log(value);\n  //     return acc;\n  //   }, {});\n  // }, [search]);\n\n  // console.log(search);\n\n  const [input, setInput] = useState(params.search ?? '');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input.trim()) {\n      alert('Please, enter your request');\n      return;\n    }\n    // setSearch({ query: input, page: 1 });\n    setSearch(prev => {\n      return { ...params, search: input };\n    });\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchFormBtn}>\n          <span>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          value={input}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={e => setInput(e.target.value)}\n        />\n      </form>\n    </header>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { fetchFilmQuerys } from 'components/services/imageApi';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ListFilms } from 'components/ListFilms/ListFilms';\n// import { Button } from 'components/Button/Button';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  // винести в окремий компонент\n  const ButtonLoadMore = () => {\n    return (\n      <button\n        onClick={() => {\n          console.log(123);\n          setPage(prev => prev + 1);\n        }}\n      >\n        load more\n      </button>\n    );\n  };\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    fetchFilmQuerys(search, page)\n      .then(data => {\n        console.log(data);\n        setMovies(data.results);\n      })\n      .catch(err => console.log(err));\n  }, [search, page]);\n\n  return (\n    <>\n      <SearchForm />\n      {movies.length > 0 ? <ListFilms movies={movies} /> : <h1>sadasdsadsd</h1>}\n      <ButtonLoadMore />\n    </>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"mainTitle\":\"ListFilms_mainTitle__I7yBu\",\"buttonLike\":\"ListFilms_buttonLike__COiqj\",\"list\":\"ListFilms_list__uTo02\",\"list__item\":\"ListFilms_list__item__1qvcv\",\"link\":\"ListFilms_link__4i0si\",\"box_title\":\"ListFilms_box_title__y4GFf\",\"text_name\":\"ListFilms_text_name__Hxp0l\",\"text_average\":\"ListFilms_text_average__T4IME\",\"image\":\"ListFilms_image__FPQ0L\",\"box_item\":\"ListFilms_box_item__KtOiu\"};","import { Link, useLocation } from 'react-router-dom';\nimport s from './ListFilms.module.css';\nexport const ListFilms = ({ movies, title }) => {\n  const location = useLocation();\n  console.log(movies);\n  return (\n    <>\n      {title && <h1 className={s.mainTitle}>Movies Trending</h1>}\n      <ul className={s.list}>\n        {movies?.map(({ id, title, poster_path, vote_average }) => {\n          const imgPath = `https://image.tmdb.org/t/p/w500${poster_path}`;\n          const notFindImage =\n            'https://st2.depositphotos.com/3643473/6205/i/950/depositphotos_62059967-stock-photo-3d-man-with-a-binocular.jpg';\n          return (\n            <li key={id} className={s.list__item}>\n              <button className={s.buttonLike}>Like</button>\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: location }}\n                className={s.link}\n              >\n                {poster_path === null ? (\n                  <img\n                    width=\"300\"\n                    src={notFindImage}\n                    alt={title}\n                    className={s.image}\n                  />\n                ) : (\n                  <img\n                    width=\"300\"\n                    src={imgPath}\n                    alt={title}\n                    className={s.image}\n                  />\n                )}\n                <div className={s.box_title}>\n                  <p className={s.text_name}>{title}</p>\n                  <p className={s.text_average}>{vote_average.toFixed(1)}</p>\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = 'cb9f3ba1d1c3cba355cedf3c9174f5a3';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>    \"FilmTrending\"\n\nexport const getFilmTrendings = () => {\n  return axios\n    .get('/trending/movie/day', {\n      params: {\n        // media_type: 'movie',\n        // time_window: 'day',\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const getFilmTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false     \"searchQuery\"\n\nexport const fetchFilmQuery = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&include_adult=true&page=${page}&query=${query}`\n  );\n\n  return response.data;\n};\n\nexport const fetchFilmQuerys = (query, page = 1) => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        query,\n        language: `en - US`,\n        page,\n        include_adult: true,\n        api_key: API_KEY,\n        total_pages: 8,\n      },\n    })\n    .then(res => res.data);\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US      \"detals a movie\"\n\n// export const getFilmDetals = (id = 76600) => {\n//   return axios\n//     .get('/movie', {\n//       params: {\n//         movie_id: id,\n//         api_key: API_KEY,\n//         language: `en - US`,\n//       },\n//     })\n//     .then(res => res.data);\n// };\n\nexport const getFilmDetals = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n// CAST\n\nexport const getFilmCasts = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: `en - US`,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const getFilmCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n//  REVIEWS\nexport const getFilmReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","SearchForm","useSearchParams","searchParams","setSearch","params","useMemo","fromEntries","useState","search","input","setInput","className","s","onSubmit","e","preventDefault","trim","prev","alert","type","autoComplete","autoFocus","placeholder","onChange","Movies","movies","setMovies","page","setPage","get","ButtonLoadMore","onClick","console","log","useEffect","fetchFilmQuerys","then","data","results","catch","err","ListFilms","title","location","useLocation","map","id","poster_path","vote_average","imgPath","to","state","from","width","src","alt","toFixed","API_KEY","BASE_URL","axios","getFilmTrending","response","query","language","include_adult","api_key","total_pages","res","getFilmDetals","movieId","getFilmCasts","getFilmReviews"],"sourceRoot":""}