{"version":3,"file":"static/js/791.6717abe4.chunk.js","mappings":"6OACA,EAA4B,8BAA5B,EAAuE,+BAAvE,EAAsH,kCAAtH,EAAgP,oC,SCGnOA,EAAa,WACxB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACAC,QAAQC,IAAIH,GAUZ,OACE,mBAAQI,UAAWC,EAAnB,UACE,kBAAMC,SAXW,SAAAC,GACnBA,EAAEC,iBACGX,EAAMY,OAIXR,EAAU,CAAES,MAAOb,EAAOc,KAAM,IAH9BC,MAAM,6BAIT,EAIiCR,UAAWC,EAAzC,WACE,mBAAQQ,KAAK,SAAST,UAAWC,EAAjC,UACE,wCAGF,kBACED,UAAWC,EACXQ,KAAK,OACLC,MAAOjB,EACPkB,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAU,SAAAX,GAAC,OAAIT,EAASS,EAAEY,OAAOL,MAAtB,QAKpB,E,kBClCYM,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EADC,OAUnB,ECXYK,EAAS,WACpB,OAA4BlC,EAAAA,EAAAA,UAAS,IAArC,eAAOyB,EAAP,KAAeU,EAAf,KACA,GAAiBhC,EAAAA,EAAAA,MAAVC,GAAP,eAEMU,EAAQV,EAAOgC,IAAI,SACnBrB,EAAOX,EAAOgC,IAAI,QAexB,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBxB,EAAOC,GACpBwB,MAAK,SAAAC,GAEJL,EAAUK,EAAKC,QAChB,IACAC,OAAM,SAAAC,GAAG,OAAIrC,QAAQC,IAAIoC,EAAhB,GACb,GAAE,CAAC7B,EAAOC,KAGT,iCACE,SAAChB,EAAD,IACC0B,EAAOmB,OAAS,IAAK,SAACpB,EAAD,CAAkBC,OAAQA,MAGrD,EAED,G,+LCjCMoB,EAAU,mCACVC,EAAQ,+BAEdC,EAAAA,EAAAA,SAAAA,QAAyB,+BAIlB,IAYMC,EAAe,mCAAG,oGACND,EAAAA,EAAAA,IAAA,UAClBD,EADkB,uCACqBD,IAFf,cACvBI,EADuB,yBAKtBA,EAAST,MALa,2CAAH,qDAkBfF,EAAkB,SAACxB,GAAqB,IAAdC,EAAa,uDAAN,EAC5C,OAAOgC,EAAAA,EAAAA,IACA,gBAAiB,CACpBG,OAAQ,CACNpC,MAAAA,EACAqC,SAAS,UACTpC,KAAAA,EACAqC,eAAe,EACfC,QAASR,KAGZN,MAAK,SAAAe,GAAG,OAAIA,EAAId,IAAR,GACZ,EAgBYe,EAAa,mCAAG,WAAMC,GAAN,uFACJT,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACAU,EADA,oBACmBX,EADnB,oBADI,cACrBI,EADqB,yBAKpBA,EAAST,MALW,2CAAH,sDAUbiB,EAAe,SAAAD,GAC1B,OAAOT,EAAAA,EAAAA,IAAA,iBACUS,EADV,YAC6B,CAChCN,OAAQ,CACNG,QAASR,EACTM,SAAS,aAGZZ,MAAK,SAAAe,GAAG,OAAIA,EAAId,IAAR,GACZ,EAWYkB,EAAc,mCAAG,WAAMF,GAAN,uFACLT,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACAU,EADA,4BAC2BX,EAD3B,2BADK,cACtBI,EADsB,yBAKrBA,EAAST,MALY,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","components/SearchMoviesList/SearchMoviesList.jsx","Pages/MoviesPage.jsx","components/services/imageApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"SearchForm_Searchbar__TfPCD\",\"SearchForm\":\"SearchForm_SearchForm__jbIQn\",\"SearchFormBtn\":\"SearchForm_SearchFormBtn__F3BXT\",\"SearchForm-button-label\":\"SearchForm_SearchForm-button-label__xPh3F\",\"SearchFormInput\":\"SearchForm_SearchFormInput__jntvc\"};","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport s from './SearchForm.module.css';\n\nexport const SearchForm = () => {\n  const [input, setInput] = useState('');\n  const [search, setSearch] = useSearchParams(); // location.search\n  console.log(search);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input.trim()) {\n      alert('Please, enter your request');\n      return;\n    }\n    setSearch({ query: input, page: 1 });\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchFormBtn}>\n          <span>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          value={input}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={e => setInput(e.target.value)}\n        />\n      </form>\n    </header>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const SearchMoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { fetchFilmQuerys } from 'components/services/imageApi';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchMoviesList } from 'components/SearchMoviesList/SearchMoviesList';\n// import { Button } from 'components/Button/Button';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [search] = useSearchParams();\n\n  const query = search.get('query'); // location.search\n  const page = search.get('page');\n\n  // const handleChangePage = () => {\n  //   setSearch({ query, page: Number(page) + 1 });\n  // };\n\n  useEffect(() => {\n    fetchFilmQuerys(query, page)\n      .then(data => {\n        // console.log(data);\n        setMovies(data.results);\n      })\n      .catch(err => console.log(err));\n  }, [query, page]);\n\n  return (\n    <>\n      <SearchForm />\n      {movies.length > 0 && <SearchMoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'cb9f3ba1d1c3cba355cedf3c9174f5a3';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>    \"FilmTrending\"\n\nexport const getFilmTrendings = () => {\n  return axios\n    .get('/trending/movie/day', {\n      params: {\n        // media_type: 'movie',\n        // time_window: 'day',\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const getFilmTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false     \"searchQuery\"\n\nexport const fetchFilmQuery = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&include_adult=true&page=${page}&query=${query}`\n  );\n\n  return response.data;\n};\n\nexport const fetchFilmQuerys = (query, page = 1) => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        query,\n        language: `en - US`,\n        page,\n        include_adult: true,\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US      \"detals a movie\"\n\n// export const getFilmDetals = (id = 76600) => {\n//   return axios\n//     .get('/movie', {\n//       params: {\n//         movie_id: id,\n//         api_key: API_KEY,\n//         language: `en - US`,\n//       },\n//     })\n//     .then(res => res.data);\n// };\n\nexport const getFilmDetals = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n// CAST\n\nexport const getFilmCasts = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: `en - US`,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const getFilmCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n//  REVIEWS\nexport const getFilmReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n"],"names":["SearchForm","useState","input","setInput","useSearchParams","search","setSearch","console","log","className","s","onSubmit","e","preventDefault","trim","query","page","alert","type","value","autoComplete","autoFocus","placeholder","onChange","target","SearchMoviesList","movies","location","useLocation","map","id","title","to","state","from","Movies","setMovies","get","useEffect","fetchFilmQuerys","then","data","results","catch","err","length","API_KEY","BASE_URL","axios","getFilmTrending","response","params","language","include_adult","api_key","res","getFilmDetals","movieId","getFilmCasts","getFilmReviews"],"sourceRoot":""}