{"version":3,"file":"static/js/381.ce2b8bd3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","components/ButtonLoadMore/ButtonLoadMore.jsx","Pages/MoviesPage.jsx","components/ListFilms/ListFilms.jsx","components/services/imageApi.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"SearchForm_Searchbar__TfPCD\",\"SearchForm\":\"SearchForm_SearchForm__jbIQn\",\"SearchFormBtn\":\"SearchForm_SearchFormBtn__F3BXT\",\"SearchForm-button-label\":\"SearchForm_SearchForm-button-label__xPh3F\",\"SearchFormInput\":\"SearchForm_SearchFormInput__jntvc\"};","import { useState, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport s from './SearchForm.module.css';\n\nexport const SearchForm = () => {\n  const [searchParams, setSearch] = useSearchParams();\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  // const { name, maxPrice, inStock } = params;\n\n  // const [search, setSearch] = useSearchParams();\n\n  // const queryParams = useMemo(() => {\n  //   return [...search].reduce((acc, [key, value]) => {\n  //     acc[key] = value;\n  //     console.log(acc);\n  //     console.log(key);\n  //     console.log(value);\n  //     return acc;\n  //   }, {});\n  // }, [search]);\n\n  // console.log(search);\n\n  const [input, setInput] = useState(params.search ?? '');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input.trim()) {\n      alert('Please, enter your request');\n      return;\n    }\n    // setSearch({ query: input, page: 1 });\n    setSearch(prev => {\n      return { ...params, search: input };\n    });\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchFormBtn}>\n          <span>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          value={input}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={e => setInput(e.target.value)}\n        />\n      </form>\n    </header>\n  );\n};\n","export const ButtonLoadMore = ({ setPage }) => {\n  return (\n    <button\n      onClick={() => {\n        console.log(123);\n        setPage(prev => prev + 1);\n      }}\n    >\n      load more\n    </button>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { fetchFilmQuerys } from 'components/services/imageApi';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ListFilms } from 'components/ListFilms/ListFilms';\nimport { ButtonLoadMore } from 'components/ButtonLoadMore/ButtonLoadMore';\n// import { Button } from 'components/Button/Button';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  // винести в окремий компонент\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    fetchFilmQuerys(search, page)\n      .then(data => {\n        console.log(data);\n        setMovies(prev => [...prev, ...data.results]);\n      })\n      .catch(err => console.log(err));\n  }, [search, page]);\n\n  return (\n    <>\n      <SearchForm />\n      {movies.length > 0 ? <ListFilms movies={movies} /> : <h1>sadasdsadsd</h1>}\n      <ButtonLoadMore setPage={setPage} />\n    </>\n  );\n};\n\nexport default Movies;\n","import s from './ListFilms.module.css';\nimport { useCallback, useEffect, useState } from 'react';\nimport { ItemFilms } from './itemFilms/itemFilms';\n\nexport const ListFilms = ({ movies, title }) => {\n  const [state, setState] = useState([]);\n  const [like, setLike] = useState(undefined);\n  const likeMovies = useCallback(\n    () => JSON.parse(localStorage.getItem('likeMovie')) || [],\n    []\n  );\n\n  useEffect(() => {\n    setState(likeMovies);\n    console.log('рендер ліст філм');\n  }, [likeMovies, like]);\n\n  return (\n    <div className={s.box}>\n      {title && <h1 className={s.mainTitle}>Movies Trending</h1>}\n      <ul className={s.list}>\n        {movies?.map(({ id, title, poster_path, vote_average }) => {\n          const isLike = state.some(movie => movie.id === id);\n          return (\n            <ItemFilms\n              key={id}\n              id={id}\n              title={title}\n              poster_path={poster_path}\n              vote_average={vote_average}\n              isLike={isLike}\n              setLike={setLike}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = 'cb9f3ba1d1c3cba355cedf3c9174f5a3';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>    \"FilmTrending\"\n\nexport const getFilmTrendings = () => {\n  return axios\n    .get('/trending/movie/day', {\n      params: {\n        // media_type: 'movie',\n        // time_window: 'day',\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const getFilmTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false     \"searchQuery\"\n\nexport const fetchFilmQuery = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&include_adult=true&page=${page}&query=${query}`\n  );\n\n  return response.data;\n};\n\nexport const fetchFilmQuerys = (query, page = 1) => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        query,\n        language: `en - US`,\n        page,\n        include_adult: true,\n        api_key: API_KEY,\n        total_pages: 8,\n      },\n    })\n    .then(res => res.data);\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US      \"detals a movie\"\n\n// export const getFilmDetals = (id = 76600) => {\n//   return axios\n//     .get('/movie', {\n//       params: {\n//         movie_id: id,\n//         api_key: API_KEY,\n//         language: `en - US`,\n//       },\n//     })\n//     .then(res => res.data);\n// };\n\nexport const getFilmDetals = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n// CAST\n\nexport const getFilmCasts = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: `en - US`,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const getFilmCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n//  REVIEWS\nexport const getFilmReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["SearchForm","useSearchParams","searchParams","setSearch","params","useMemo","Object","fromEntries","useState","search","input","setInput","className","s","onSubmit","e","preventDefault","trim","prev","alert","type","value","autoComplete","autoFocus","placeholder","onChange","target","ButtonLoadMore","setPage","onClick","console","log","Movies","movies","setMovies","page","get","useEffect","fetchFilmQuerys","then","data","results","catch","err","length","ListFilms","title","state","setState","undefined","like","setLike","likeMovies","useCallback","JSON","parse","localStorage","getItem","map","id","poster_path","vote_average","isLike","some","movie","API_KEY","BASE_URL","axios","getFilmTrending","response","query","language","include_adult","api_key","total_pages","res","getFilmDetals","movieId","getFilmCasts","getFilmReviews","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","i","arguments","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}