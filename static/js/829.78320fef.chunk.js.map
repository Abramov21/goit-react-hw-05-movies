{"version":3,"file":"static/js/829.78320fef.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetailsInfo/MovieDetailsInfo.module.css?3ddb","components/MovieDetailsInfo/MovieDetailsInfo.jsx","Pages/MovieDetails.jsx","components/services/imageApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetailsInfo_container__2ethf\",\"card\":\"MovieDetailsInfo_card__rYg3B\",\"info\":\"MovieDetailsInfo_info__V82uv\",\"btn\":\"MovieDetailsInfo_btn__ci2W2\"};","import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport s from './MovieDetailsInfo.module.css';\nimport { useRef } from 'react';\n\nexport const MovieDetailsInfo = movie => {\n  const userScore = Math.floor(movie?.movie?.vote_average * 10);\n  const imgPath = `https://image.tmdb.org/t/p/w500${movie.movie.poster_path}`;\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  const prevPage = useRef(location.state?.from);\n  // console.log(prevPage.current);\n  console.log(location.state);\n  return (\n    <div className={s.container}>\n      <button className={s.btn} onClick={() => navigate(prevPage.current)}>\n        Back{' '}\n      </button>\n      <div className={s.card}>\n        <img width=\"300\" src={imgPath} alt={movie?.movie?.title} />\n        <div className={s.info}>\n          <h2>{movie.movie.title}</h2>\n          <h2>Data release:{movie?.movie?.release_date}</h2>\n          <p>{`User Score: ${userScore}%`}</p>\n          <h3>Overview</h3>\n          <p>{movie?.movie?.overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {movie?.movie?.genres?.length > 0\n              ? movie?.movie?.genres?.map(item => item.name).join(', ')\n              : 'no info'}\n          </p>\n        </div>\n      </div>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={location}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={location}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import { MovieDetailsInfo } from 'components/MovieDetailsInfo/MovieDetailsInfo';\nimport { getFilmDetals } from 'components/services/imageApi';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  //   console.log(useParams());\n  useEffect(() => {\n    getFilmDetals(movieId)\n      .then(data => {\n        setMovie(data);\n      })\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n  return (\n    <main>\n      <div>\n        <MovieDetailsInfo movie={movie} />\n        <Outlet />\n      </div>\n    </main>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'cb9f3ba1d1c3cba355cedf3c9174f5a3';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>    \"FilmTrending\"\n\nexport const getFilmTrendings = () => {\n  return axios\n    .get('/trending/movie/day', {\n      params: {\n        // media_type: 'movie',\n        // time_window: 'day',\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const getFilmTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false     \"searchQuery\"\n\nexport const fetchFilmQuery = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&include_adult=true&page=${page}&query=${query}`\n  );\n\n  return response.data;\n};\n\nexport const fetchFilmQuerys = (query, page = 1) => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        query,\n        language: `en - US`,\n        page,\n        include_adult: true,\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US      \"detals a movie\"\n\n// export const getFilmDetals = (id = 76600) => {\n//   return axios\n//     .get('/movie', {\n//       params: {\n//         movie_id: id,\n//         api_key: API_KEY,\n//         language: `en - US`,\n//       },\n//     })\n//     .then(res => res.data);\n// };\n\nexport const getFilmDetals = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n// CAST\n\nexport const getFilmCasts = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: `en - US`,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const getFilmCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n//  REVIEWS\nexport const getFilmReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n"],"names":["MovieDetailsInfo","movie","userScore","Math","floor","vote_average","imgPath","poster_path","location","useLocation","navigate","useNavigate","prevPage","useRef","state","from","console","log","className","s","onClick","current","width","src","alt","title","release_date","overview","genres","length","map","item","name","join","to","movieId","useParams","useState","setMovie","useEffect","getFilmDetals","then","data","catch","error","message","API_KEY","BASE_URL","axios","getFilmTrending","response","fetchFilmQuerys","query","page","params","language","include_adult","api_key","res","getFilmCasts","getFilmReviews"],"sourceRoot":""}