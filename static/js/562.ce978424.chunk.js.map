{"version":3,"file":"static/js/562.ce978424.chunk.js","mappings":"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","sources":["Pages/HomePage.jsx","webpack://react-homework-template/./src/components/ListFilms/ListFilms.module.css?6539","hooks/useLocalStorageList.jsx","components/ListFilms/ListFilms.jsx","components/services/imageApi.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getFilmTrending } from 'components/services/imageApi';\nimport { ListFilms } from 'components/ListFilms/ListFilms';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  // const { country } = useParams();\n\n  useEffect(() => {\n    getFilmTrending()\n      .then(data => {\n        setMovies(data.results);\n      })\n      .catch(err => console.log(err));\n  }, []);\n  return (\n    <main>\n      {movies.length > 0 && (\n        <ListFilms movies={movies} title=\"Movies Trending\" />\n      )}\n    </main>\n  );\n};\n\nexport default HomePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"mainTitle\":\"ListFilms_mainTitle__I7yBu\",\"buttonLike\":\"ListFilms_buttonLike__COiqj\",\"list\":\"ListFilms_list__uTo02\",\"list__item\":\"ListFilms_list__item__1qvcv\",\"link\":\"ListFilms_link__4i0si\",\"box_title\":\"ListFilms_box_title__y4GFf\",\"text_name\":\"ListFilms_text_name__Hxp0l\",\"text_average\":\"ListFilms_text_average__T4IME\",\"image\":\"ListFilms_image__FPQ0L\",\"box_item\":\"ListFilms_box_item__KtOiu\"};","const { useEffect, useState } = require('react');\n\nexport const useLocalStorageList = (key, defaultValue) => {\n  const stored = localStorage.getItem(key);\n  const initial = stored ? JSON.parse(stored) : defaultValue;\n  const [value, setValue] = useState(initial);\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport s from './ListFilms.module.css';\nimport { useLocalStorageList } from 'hooks/useLocalStorageList';\n\nexport const ListFilms = ({ movies, title }) => {\n  const location = useLocation();\n\n  const [state, setState] = useLocalStorageList('likeMovie', []);\n\n  const handleLikeButton = (id, title, poster_path, vote_average) => {\n    const movies = JSON.parse(localStorage.getItem('likeMovie'));\n    const movie = { id, title, poster_path, vote_average };\n    let isMovieId = movies.findIndex(({ id }) => id === movie.id);\n    if (isMovieId >= 0) {\n      const newMovies = movies.filter(({ id }) => id !== movie.id);\n      setState(newMovies);\n    } else {\n      setState(prev => [...state, movie]);\n    }\n    // (isMovieId === -1) {\n    // }\n  };\n\n  return (\n    <div className={s.box}>\n      {title && <h1 className={s.mainTitle}>Movies Trending</h1>}\n      <ul className={s.list}>\n        {movies?.map(({ id, title, poster_path, vote_average }) => {\n          const imgPath = `https://image.tmdb.org/t/p/w500${poster_path}`;\n          const notFindImage =\n            'https://st2.depositphotos.com/3643473/6205/i/950/depositphotos_62059967-stock-photo-3d-man-with-a-binocular.jpg';\n          return (\n            <li key={id} className={s.list__item}>\n              <button\n                className={s.buttonLike}\n                onClick={() =>\n                  handleLikeButton(id, title, poster_path, vote_average)\n                }\n              >\n                Like\n              </button>\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: location }}\n                className={s.link}\n              >\n                {poster_path === null ? (\n                  <img\n                    width=\"300\"\n                    src={notFindImage}\n                    alt={title}\n                    className={s.image}\n                  />\n                ) : (\n                  <img\n                    width=\"300\"\n                    src={imgPath}\n                    alt={title}\n                    className={s.image}\n                  />\n                )}\n                <div className={s.box_title}>\n                  <p className={s.text_name}>{title}</p>\n                  <p className={s.text_average}>{vote_average.toFixed(1)}</p>\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = 'cb9f3ba1d1c3cba355cedf3c9174f5a3';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>    \"FilmTrending\"\n\nexport const getFilmTrendings = () => {\n  return axios\n    .get('/trending/movie/day', {\n      params: {\n        // media_type: 'movie',\n        // time_window: 'day',\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const getFilmTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false     \"searchQuery\"\n\nexport const fetchFilmQuery = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&include_adult=true&page=${page}&query=${query}`\n  );\n\n  return response.data;\n};\n\nexport const fetchFilmQuerys = (query, page = 1) => {\n  return axios\n    .get('/search/movie', {\n      params: {\n        query,\n        language: `en - US`,\n        page,\n        include_adult: true,\n        api_key: API_KEY,\n        total_pages: 8,\n      },\n    })\n    .then(res => res.data);\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US      \"detals a movie\"\n\n// export const getFilmDetals = (id = 76600) => {\n//   return axios\n//     .get('/movie', {\n//       params: {\n//         movie_id: id,\n//         api_key: API_KEY,\n//         language: `en - US`,\n//       },\n//     })\n//     .then(res => res.data);\n// };\n\nexport const getFilmDetals = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n// CAST\n\nexport const getFilmCasts = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: `en - US`,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const getFilmCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\n//  REVIEWS\nexport const getFilmReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n"],"names":["useState","movies","setMovies","useEffect","getFilmTrending","then","data","results","catch","err","console","log","length","title","require","ListFilms","location","useLocation","key","defaultValue","stored","localStorage","getItem","initial","JSON","parse","value","setValue","setItem","stringify","useLocalStorageList","state","setState","className","s","map","id","poster_path","vote_average","imgPath","onClick","movie","findIndex","newMovies","filter","prev","handleLikeButton","to","from","width","src","alt","toFixed","API_KEY","BASE_URL","axios","response","fetchFilmQuerys","query","page","params","language","include_adult","api_key","total_pages","res","getFilmDetals","movieId","getFilmCasts","getFilmReviews"],"sourceRoot":""}